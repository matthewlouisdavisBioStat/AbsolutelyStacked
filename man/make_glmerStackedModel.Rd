% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_glmerStackedModel.R
\name{make_glmerStackedModel}
\alias{make_glmerStackedModel}
\title{Wrapper for generating an meta-learner to be paired with SuperModel for stacking with stepwise selection.}
\usage{
make_glmerStackedModel(
  link,
  incl_random_efx = F,
  tau_0 = 1,
  est_dispersion = F,
  min_learners = 2,
  Z = NULL,
  sigma_list = NULL,
  use_qp = F,
  fixed_weights = F,
  weights = NULL,
  trace = T
)
}
\arguments{
\item{link}{the link function for modelling, which implies the GLM to-be-used.}

\item{incl_random_efx}{T or F, should random effects be included? Requires a supplied Z matrix if T.}

\item{tau_0}{positive real number, the initial (or fixed, if est_dispersion = F) exponential family dispersion parameter.}

\item{est_dispersion}{T or F, should the exponential family dispersion parameter be estimated as well in the stacked model?}

\item{min_learners}{positive real number at least 2 or greater, the minimum number of base learners until the the backwards selection procedure will stop running (no more base learners will be excluded).}

\item{Z}{design matrix for random effects.}

\item{sigma_list}{list of entries with names equal to "sigma_1....X" and elements containing indices of the columns of Z that correspond to each random variance component.}

\item{use_qp}{T or F, should quadratic programming using the quadprog package or non-linear programming using the Rsolnp package be used to find constrained MLEs?}

\item{fixed_weights}{T or F, rather than fit the stacked model, should the weights be custom and fixed? If true, weights must be provided.}

\item{weights}{A vector of weights with length EXACTLY equal to the number of base learners being stacked, required if fixed_weights is T.}

\item{trace}{T or F, should the program print out stepwise base-learner selection output?}
}
\value{
A MachineShop custom MLModel that can be passed into the SuperModel function as the meta (aka super) learner.
}
\description{
Wrapper for generating an meta-learner to be paired with SuperModel for stacking with stepwise selection.
}
\details{
Make an MLModel to be inserted into the SuperModel function as the meta (aka super) learner. This allows one to stack ML models for a variety of different outcomes based on the GLM framework, and allows the user to perform backwards variable selection via AIC to choose an optimal combination of base learners.
}
\examples{
\donttest{

 make_glmerStackedModel(link = 'linear',est_dispersion = T)
}
}
\seealso{
\code{\link[MLModel]{MLModel}}, \code{\link[SuperModel]{SuperModel}}
}
