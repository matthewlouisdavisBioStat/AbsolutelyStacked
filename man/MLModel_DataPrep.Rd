% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MLModel_DataPrep.R
\name{MLModel_DataPrep}
\alias{MLModel_DataPrep}
\title{Pair a data pre-processing step and MLModel for insertion into a stacked model}
\usage{
MLModel_DataPrep(fit, name = "Default", y)
}
\arguments{
\item{fit}{a previously fit MachineShop MLModel fit}

\item{name}{an optional, new custom name for the new MLModel returned}

\item{y}{the name of the outcome of interest modelled by the fit object.}
}
\value{
A MachineShop custom MLModel that can be used standalone or in a stacked model.
}
\description{
Pair a data pre-processing step and MLModel for insertion into a stacked model
}
\details{
Take in previous model fit paired with a certain data prep process, return a new MLModel paired with the same data preparation process aka, this fits the same data prep + model to new data, while this is already the case with single as.MLModel() function, it does not work with stacking thus,this function allows us to stack base learners trained on different datasets into one model, rather than have all of them trained on the same set of normalized  data. Remember to clusterExport() what you need!
}
\examples{
\donttest{

 MLModel_DataPrep(fit,name = "new_fit",y = "outcome")
}
}
\seealso{
\code{\link[MLModel]{MLModel}}
}
