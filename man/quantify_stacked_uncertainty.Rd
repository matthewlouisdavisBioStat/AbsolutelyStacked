% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quantify_stacked_uncertainty.R
\name{quantify_stacked_uncertainty}
\alias{quantify_stacked_uncertainty}
\title{Parameterize and quantify uncertainty of stacked models for deriving posterior predictive distributions.}
\usage{
quantify_stacked_uncertainty(
  fit,
  chain = 2,
  iter = 25000,
  warmup = 1000,
  cores = parallel::detectCores()/2,
  prior_sigmaSq_etahat = paste0("inv_gamma(1,1)"),
  prior_dispersion = NULL,
  filename = NULL,
  return_fit = F,
  stopImplicitCluster_option = T,
  take_a_break_first = F,
  verbose = T
)
}
\arguments{
\item{fit}{a fit object returned by running the SuperModel() function with make_glmerStackedModel() as the super learner.}

\item{chain}{number of chains to include for sampling.}

\item{iter}{number of iterations per chain.}

\item{warmup}{number of warmup iterations per chain.}

\item{cores}{number of cores to use when running in parallel.}

\item{prior_sigmaSq_etahat}{the prior distribution to impose on the sigmaSq_etahat, the parameter that captures the uncertainty of the form of the model conditional upon the observed data}

\item{prior_dispersion}{the prior distribution to impose on the dispersion parameter of an exponential family model (i.e. sigma squared for normal distribution) for sampling purposes}

\item{filename}{.RData file to save posterior draws to.}

\item{return_fit}{T or F, whether to return the stacked model's fit along with the posterior draws}

\item{stopImplicitCluster_option}{T or F, whether to automatically stop any other active running clusters at the time of sampling}

\item{take_a_break_first}{T or F, whether to have the computer wait 2 minutes before starting sampling.}

\item{verbose}{T or F, whether rstan verbose ouput should be printed to the console while running (defaults to T).}
}
\value{
rstan output and saved posterior draws.
}
\description{
Parameterize and quantify uncertainty of stacked models for deriving posterior predictive distributions.
}
\details{
given a stacked model as fit using the procedures above paired with SuperModel(), this determines a parameter sigmaSq_etahat that captures uncertainty across past observations that can be be used to construct future posterior predictive intervals. For REF families with some dispersion parameter (i.e. for Weibull, Normal) this is estimated as well.
}
\examples{
\donttest{

 q <- quantify_stacked_uncertainty(fit,
                             return_fit = T,
                             iter = 1000,
                             chain = 1,
                              cores = 2,
                               warmup = 100,
                               prior_sigmaSq_etahat = "gamma(1,1)",
                               prior_dispersion = "inv_gamma(1,1)",
                              filename = "boilerplate_template.RData")
 traceplot(q$stan.result)
}
}
